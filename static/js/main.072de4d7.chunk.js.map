{"version":3,"sources":["Task.js","images/todo-image.jpg","App.js","reportWebVitals.js","index.js"],"names":["Task","id","task","editTask","deleteTask","className","onClick","App","useState","input","setInput","isErr","setIsErr","isEdit","setIsEdit","editId","setEditId","todoList","setTodoList","useEffect","JSON","parse","localStorage","getItem","json","stringify","setItem","find","item","filter","addEditTask","e","preventDefault","trim","length","newTodoList","map","editInputTask","nanoid","src","todo_image","alt","onChange","target","value","type","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.072de4d7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Task.css\";\r\nimport { FaEdit, FaTrashAlt } from 'react-icons/fa';\r\n\r\nfunction Task({ id, task, editTask, deleteTask }) {\r\n  return (\r\n    <div className=\"task\">\r\n      <span className=\"task_name\">{task}</span>\r\n      <div className=\"task_action\">\r\n        <FaEdit onClick={() => editTask(id)} className=\"edit\" />\r\n        <FaTrashAlt onClick={() => deleteTask(id)} className=\"trash-alt\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","export default __webpack_public_path__ + \"static/media/todo-image.d0d1c673.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport Task from \"./Task\";\r\nimport \"./App.css\";\r\nimport todo_image from \"./images/todo-image.jpg\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { FaEdit, FaPlus } from 'react-icons/fa';\r\n\r\nfunction App() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [isErr, setIsErr] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editId, setEditId] = useState(\"\");\r\n  const [todoList, setTodoList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setTodoList(JSON.parse(localStorage.getItem(\"todoList\")) || []);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const json = JSON.stringify(todoList);\r\n    localStorage.setItem(\"todoList\", json);\r\n  }, [todoList]);\r\n\r\n  const editTask = (id) => {\r\n    setIsEdit(true);\r\n    setEditId(id);\r\n    setInput(todoList.find((item) => item.id === id).task);\r\n  };\r\n\r\n  const editInputTask = () => {\r\n    const newTodoList = todoList.map((item) => {\r\n      if (item.id === editId) item.task = input;\r\n      return item;\r\n    });\r\n    setIsEdit(false);\r\n    setTodoList(newTodoList);\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTodoList(todoList.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const addEditTask = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (input.trim().length) {\r\n      if (isEdit) {\r\n        editInputTask();\r\n      } else {\r\n        const item = {\r\n          id: nanoid(),\r\n          task: input.trim(),\r\n        };\r\n        setTodoList([...todoList, item]);\r\n      }\r\n      setIsErr(false);\r\n    } else {\r\n      setIsErr(true);\r\n    }\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"container\">\r\n        <div className=\"title\">List Disk - A Todo App</div>\r\n        <img className=\"todo_logo\" src={todo_image} alt=\"todo logo\" />\r\n        <div className=\"heading\">Add Your Task Here &#9996; </div>\r\n        <div className=\"add_container\">\r\n          <form className=\"add_item\">\r\n            <input\r\n              onChange={(e) => setInput(e.target.value)}\r\n              value={input}\r\n              type=\"text\"\r\n              placeholder=\"&#9997; Add Task\"\r\n            />\r\n            <button\r\n              onClick={addEditTask}\r\n              type=\"submit\"\r\n              className={isEdit ? \"edit_btn\" : \"add_btn\"}\r\n            >{ isEdit ? <FaEdit /> : <FaPlus /> }</button>\r\n          </form>\r\n          <div className=\"input_err\">{isErr && \"Input can't be blank\"}</div>\r\n        </div>\r\n        <div className=\"todo_list\">\r\n          {todoList.map((item) => (\r\n            <Task\r\n              key={item.id}\r\n              id={item.id}\r\n              task={item.task}\r\n              deleteTask={deleteTask}\r\n              editTask={editTask}\r\n            />\r\n          ))}\r\n        </div>\r\n        <button\r\n          onClick={(e) => (todoList.length ? setTodoList([]) : addEditTask(e))}\r\n          className=\"remove_all_btn\"\r\n        >\r\n          {todoList.length ? \"Remove All\" : \"Add Task\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}